{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/faye-chat-message/faye-chat-message.component.css","webpack:///./src/app/components/faye-chat-message/faye-chat-message.component.html","webpack:///./src/app/components/faye-chat-message/faye-chat-message.component.ts","webpack:///./src/app/components/faye-chat-user/faye-chat-user.component.css","webpack:///./src/app/components/faye-chat-user/faye-chat-user.component.html","webpack:///./src/app/components/faye-chat-user/faye-chat-user.component.ts","webpack:///./src/app/components/faye-chat/faye-chat.component.css","webpack:///./src/app/components/faye-chat/faye-chat.component.html","webpack:///./src/app/components/faye-chat/faye-chat.component.ts","webpack:///./src/app/enums/fayeState.enum.ts","webpack:///./src/app/services/chat/chat.service.ts","webpack:///./src/app/services/eventManager/event-manager-factory.service.ts","webpack:///./src/app/services/fayeManager/faye-manager.service.ts","webpack:///./src/app/services/logger/logger.service.ts","webpack:///./src/app/utils/eventManager.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#main-divider {\\r\\n    margin-bottom: 2%;\\r\\n}\\r\\n\\r\\n#main-title {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.username-small {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n.main-container, .main-app {\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n#main-enter {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.main-input {\\r\\n    height: 85%;\\r\\n}\"","module.exports = \"<div class=\\\"container main-app\\\">\\n  <div class=\\\"col s10 offset-s1 m10 offset-m1 main-container\\\">\\n    <h2 id=\\\"main-title\\\">Faye Chat</h2>\\n    <div class=\\\"divider\\\" id=\\\"main-divider\\\"></div>\\n    <div class=\\\"row main-input\\\" *ngIf=\\\"!username\\\">\\n      <div class=\\\"row\\\">\\n        <form #f=\\\"ngForm\\\" [formGroup]=\\\"form\\\">\\n          <div class=\\\"input-field col s8 offset-s2 m4 offset-m4\\\">\\n              <input type=\\\"text\\\" class=\\\"validate\\\" (keyup.enter)=\\\"enter()\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': !form.get('username').valid}\\\" id=\\\"username\\\" formControlName=\\\"username\\\">\\n              <label for=\\\"username\\\">Username</label>\\n              <div *ngIf=\\\"form.get('username').touched\\\">\\n                <small *ngIf=\\\"usernameIsInvalid()\\\" class=\\\"form-text username-small\\\">\\n                  Username must be between 3 and 15 characters long\\n                </small>        \\n              </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"row\\\" id=\\\"main-enter\\\">\\n        <a class=\\\"waves-effect waves-light btn\\\" [ngClass]=\\\"{'disabled': usernameIsInvalid()}\\\" (click)=\\\"enter()\\\">Enter in the chat</a>\\n      </div>\\n    </div>\\n    <app-faye-chat *ngIf=\\\"username\\\" [username]=\\\"username\\\"></app-faye-chat>\\n  </div>\\n</div>\\n\\n\"","import { Logger } from './services/logger/logger.service';\nimport { Component, Input } from '@angular/core';\nimport { FormBuilder, Form, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { FayeManager } from './services/fayeManager/faye-manager.service';\nimport { sendRequest } from 'selenium-webdriver/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Faye Chat';\n\n  /**\n   * Username input formular\n   *\n   * @type {FormGroup}\n   * @memberof AppComponent\n   */\n  form: FormGroup;\n\n  /**\n   * Current user's username\n   *\n   * @type {string}\n   * @memberof AppComponent\n   */\n  username: string;\n\n  constructor(\n    private _fb: FormBuilder,\n    private _logger: Logger\n  ) {\n    this.initForm();\n  }\n\n  /**\n   * Form init (username)\n   * @private\n   * @memberof AppComponent\n   */\n  private initForm() {\n    // Form configuration\n    this.form = this._fb.group({\n      username: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(15)])\n    });\n  }\n\n  /**\n   * Return username invalid state\n   * @returns\n   * @memberof AppComponent\n   */\n  public usernameIsInvalid() {\n    return this.form.get('username').hasError('minlength') ||\n      this.form.get('username').hasError('required') ||\n      this.form.get('username').hasError('maxlength');\n  }\n\n  /**\n   * Enter in the chat\n   * @memberof AppComponent\n   */\n  public enter() {\n    if (!this.usernameIsInvalid()) {\n      this.username = this.form.get('username').value;\n      this._logger.debug(`Connected as ${this.username}`);\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FayeChatComponent } from './components/faye-chat/faye-chat.component';\nimport { FayeChatMessageComponent } from './components/faye-chat-message/faye-chat-message.component';\nimport { FayeChatUserComponent } from './components/faye-chat-user/faye-chat-user.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FayeChatComponent,\n    FayeChatMessageComponent,\n    FayeChatUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".sender {    \\r\\n    display: block;\\r\\n    color: #000000;\\r\\n    font-size: 9pt;\\r\\n    padding-top: 5px !important;\\r\\n}\\r\\n\\r\\n.replies .sender {\\r\\n    padding: 0px 15px 3px 5px;\\r\\n}\\r\\n\\r\\n.sent .sender {\\r\\n    text-align: right;\\r\\n    padding: 5px 8px 3px 0px;\\r\\n}\\r\\n\\r\\ndiv.replies p {\\r\\n    color: white;\\r\\n    float: left;\\r\\n}\\r\\n\\r\\ndiv.sent p {\\r\\n    background: #0000;\\r\\n    color: white;\\r\\n    float: right;\\r\\n}\\r\\n\\r\\n.message {\\r\\n    margin-bottom: 0px;\\r\\n}\\r\\n\\r\\n.message p {\\r\\n    display: block;\\r\\n    padding: 10px 15px;\\r\\n    word-wrap:break-word;\\r\\n    border-radius: 7px;\\r\\n    line-height: 130%;\\r\\n    max-width: 70%;\\r\\n    margin-top: 5px;\\r\\n    margin-bottom: 5px;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"!message.muted\\\" class=\\\"row message\\\" [ngClass]=\\\"{'sent': !incomeMessage, 'replies': incomeMessage}\\\">\\n  <span class=\\\"sender\\\" *ngIf=\\\"!sameSenderThanPreviousMsg\\\" >{{ message.sender }}</span>\\n  <p [ngStyle]=\\\"{'background-color': incomeMessage ? message.color : 'black'}\\\">{{ message.content }}</p>\\n</div>\"","import { ChatService } from './../../services/chat/chat.service';\nimport { Component, Input } from '@angular/core';\nimport { Message } from '../../interfaces/message';\n\n@Component({\n  selector: 'app-faye-chat-message',\n  templateUrl: './faye-chat-message.component.html',\n  styleUrls: ['./faye-chat-message.component.css']\n})\nexport class FayeChatMessageComponent {\n  @Input() incomeMessage: boolean;\n  @Input() message: Message;\n  @Input() sameSenderThanPreviousMsg: boolean;\n\n  constructor() {\n  }\n\n}\n","module.exports = \".user-info {\\r\\n    position: relative;\\r\\n    width: 100%;\\r\\n    left: 0;\\r\\n    height: 8%;\\r\\n}\\r\\n\\r\\n.username {\\r\\n    position: absolute;\\r\\n    left: 3%;\\r\\n    top: 4%;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.color-icon {\\r\\n    position: absolute !important;\\r\\n    right: 2% !important;\\r\\n}\\r\\n\\r\\n.mute-icon {\\r\\n    position: absolute !important;\\r\\n    right: 20% !important;\\r\\n}\"","module.exports = \"<div class=\\\"row user-info\\\">\\n  <p class=\\\"username\\\">{{ username }}</p>\\n  <a class=\\\"btn-floating btn-large waves-effect waves-light green mute-icon\\\" *ngIf=\\\"!isMute\\\" (click)=\\\"mute()\\\"><i class=\\\"material-icons\\\">mic</i></a>\\n  <a class=\\\"btn-floating btn-large waves-effect waves-light red mute-icon\\\" *ngIf=\\\"isMute\\\" (click)=\\\"unmute()\\\"><i class=\\\"material-icons\\\">mic_off</i></a>\\n  <a class=\\\"btn-floating btn-large waves-effect waves-light color-icon\\\" (click)=\\\"changeColor()\\\" [ngStyle]=\\\"{'background-color': colors[currentColorIndex]}\\\"><i class=\\\"material-icons\\\"></i></a>\\n</div>\"","import { ChatService } from './../../services/chat/chat.service';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-faye-chat-user',\n  templateUrl: './faye-chat-user.component.html',\n  styleUrls: ['./faye-chat-user.component.css']\n})\nexport class FayeChatUserComponent  {\n  public isMute = false;\n  public currentColorIndex = 0;\n  public colors = ['purple', 'pink', 'red', 'green', 'blue']; // we can also use a color picker (not very hard)\n  @Input() username: string;\n\n  constructor(\n    private _chatService: ChatService\n  ) { }\n\n  mute() {\n    this._chatService.muteUser(this.username);\n    this.isMute = true;\n  }\n\n  unmute() {\n    this._chatService.unmuteUser(this.username);\n    this.isMute = false;\n  }\n\n  changeColor() {\n    if ((this.currentColorIndex + 1) === this.colors.length) {\n      this.currentColorIndex = 0;\n    } else {\n      this.currentColorIndex += 1;\n    }\n    this._chatService.changeUserColor(this.username, this.colors[this.currentColorIndex]);\n  }\n\n}\n","module.exports = \".faye-chat {\\r\\n    height: 85%;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.messages-wrapper {\\r\\n    width: 70% !important;\\r\\n    position: absolute;\\r\\n    left: 28% !important;\\r\\n    height: 100%;\\r\\n    border-left: 1px solid silver;\\r\\n}\\r\\n\\r\\n.messages {\\r\\n    width: 100%;\\r\\n    height: 90%;\\r\\n    top: 0;\\r\\n    padding: 3%;\\r\\n    overflow-y: scroll;\\r\\n    overflow-x: hidden;\\r\\n    position: absolute;\\r\\n}\\r\\n\\r\\n.input-message {\\r\\n    width: 100%;\\r\\n    height: 10%;\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n}\\r\\n\\r\\n.input-text-message {\\r\\n    position: absolute;\\r\\n    width: 87% !important;\\r\\n    left: 1% !important;\\r\\n}\\r\\n\\r\\n.input-send-button {\\r\\n    position: absolute !important;\\r\\n    right: 2%;\\r\\n}\\r\\n\\r\\n.usernames-wrapper {\\r\\n    width: 28% !important;\\r\\n    position: absolute;\\r\\n    left: 0% !important;\\r\\n    height: 100%;\\r\\n}\"","module.exports = \"<div class=\\\"faye-chat\\\">\\n  <div class=\\\"messages-wrapper\\\">\\n    <div class=\\\"messages\\\">\\n      <app-faye-chat-message *ngFor=\\\"let message of messages; let i = index\\\" [message]=\\\"message\\\" [incomeMessage]=\\\"message.sender !== username\\\" [sameSenderThanPreviousMsg]=\\\"(i > 0 && message.sender === messages[(i - 1)].sender)\\\"></app-faye-chat-message> \\n    </div>\\n    <div class=\\\"input-message\\\">\\n        <div class=\\\"input-field col s12 m12\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control input-text-message\\\" (keyup.enter)=\\\"sendMessage()\\\" [(ngModel)]=\\\"currentMessage\\\" id=\\\"message\\\">\\n          <label for=\\\"username\\\">Message</label>\\n          <a class=\\\"btn-floating btn-large waves-effect waves-light green input-send-button\\\" (click)=\\\"sendMessage()\\\"><i class=\\\"material-icons\\\">send</i></a>\\n        </div>\\n    </div>\\n  </div>\\n  <div class=\\\"usernames-wrapper\\\">\\n    <app-faye-chat-user *ngFor=\\\"let username of usersInChat;\\\" [username]=\\\"username\\\"></app-faye-chat-user>\\n  </div>\\n</div>\"","import { ChatService } from './../../services/chat/chat.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Message } from '../../interfaces/message';\nimport { UserPreference } from '../../interfaces/userPreference';\n\n@Component({\n  selector: 'app-faye-chat',\n  templateUrl: './faye-chat.component.html',\n  styleUrls: ['./faye-chat.component.css']\n})\nexport class FayeChatComponent implements OnInit {\n\n  @Input() username: string;\n\n  public messages: Message[] = [];\n\n  public usersInChat: string[] = [];\n\n  /**\n   * Current message written by the current user\n   *\n   * @type {string}\n   * @memberof FayeChatComponent\n   */\n  public currentMessage: string;\n\n  constructor(\n    private _chatService: ChatService\n  ) {\n    this._chatService.event.on('color', (username, color) => {\n      this.getMessagesFromUser(username).forEach(m => {\n        m.color = color;\n      });\n    });\n\n\n    this._chatService.event.on('unmute', (username) => {\n      this.getMessagesFromUser(username).forEach(m => {\n        m.muted = false;\n      });\n    });\n  }\n\n  ngOnInit(): void {\n    this._chatService.init(this.username);\n    this._chatService.event.on('message', this.onNewMessage.bind(this));\n  }\n  /**\n   * On new message\n   * @private\n   * @param {Message} message\n   * @memberof FayeChatComponent\n   */\n  private onNewMessage(message: Message) {\n    if (!this.usersInChat.includes(message.sender)) {\n      this.usersInChat.push(message.sender);\n    }\n    this.messages.push(message);\n  }\n\n  /**\n   * Send message to other user\n   *\n   * @memberof FayeChatComponent\n   */\n  public sendMessage() {\n    if (this.currentMessage.trim().length > 0) {\n      const msg = {\n        sender: this.username,\n        content: this.currentMessage\n      };\n      this._chatService.sendMessage(msg);\n      this.messages.push(msg);\n      this.currentMessage = '';\n    }\n  }\n\n  public getMessagesFromUser(username: string): Message[] {\n    return this.messages.filter(m => m.sender === username);\n  }\n}\n","export enum FayeState {\r\n    DISCONNECTED = 0,\r\n    CONNECTING = 1,\r\n    CONNECTED = 2\r\n}\r\n","import { Message } from './../../interfaces/message';\nimport { Logger } from './../logger/logger.service';\nimport { Injectable } from '@angular/core';\nimport { EventEmitter } from 'events';\nimport { FayeManager } from '../fayeManager/faye-manager.service';\nimport { FayeChannelMessage } from '../../interfaces/fayeChannelMessage';\nimport { UserPreference } from '../../interfaces/userPreference';\nimport { FayeState } from '../../enums/fayeState.enum';\n\n/**\n * Chat service\n *\n * @export\n * @class ChatService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  /**\n   * Faye channel to chat\n   *\n   * @private\n   * @type {string}\n   * @memberof ChatService\n   */\n  private _chatChannel = '/chat';\n\n  /**\n   * Chat event emiter\n   *\n   * @private\n   * @memberof ChatService\n   */\n  public event = new EventEmitter();\n\n  /**\n   * Current user\n   *\n   * @private\n   * @type {string}\n   * @memberof ChatService\n   */\n  private _currentUser: string;\n\n  /**\n   * User preferences by sender in the chat\n   *\n   * @private\n   * @type {{ [username: string]: UserPreference }}\n   * @memberof ChatService\n   */\n  private _userPreference: { [username: string]: UserPreference } = { };\n\n  private _currentSubscription: {\n    unsubscribe: (disconnect: boolean) => void\n  };\n\n  /**\n   * Default user preference\n   *\n   * @private\n   * @type {UserPreference}\n   * @memberof ChatService\n   */\n  private _defaultUserPreference: UserPreference = {\n    color: 'purple',\n    mute: false\n  };\n\n  constructor(\n    private _fayeManager: FayeManager,\n    private _logger: Logger\n  ) {\n    // Actually not necessary\n    this._fayeManager.onDisconnected(() => {\n      this.event.emit('disconnected');\n    });\n\n    this._fayeManager.onConnect(() => {\n      this.event.emit('connected');\n    });\n  }\n\n  /**\n   * Init chat\n   *\n   * @param {string} username\n   * @memberof ChatService\n   */\n  public init(username: string) {\n    this.cleanUp();\n    this._currentUser = username;\n    this._currentSubscription = this._fayeManager.subscribe(this._chatChannel, (sender, message) => {\n      try {\n        const msg = JSON.parse(message) as FayeChannelMessage;\n        if (!msg) {\n          throw new Error('Format not correct');\n        }\n        // We use middleware-like to map the message with user preferences\n        if (msg.sender !== this._currentUser) {\n          this.event.emit('message', this.wrapMessage(msg));\n        }\n      } catch (e) {\n        // It's not a chat message\n        this._logger.error('Receive bad message ' + message);\n      }\n    }, false);\n  }\n\n  /**\n   * Clean-up subscription\n   */\n  public cleanUp() {\n    if (this._currentSubscription) {\n      this._currentSubscription.unsubscribe(this._fayeManager.states === FayeState.DISCONNECTED);\n    }\n  }\n\n  /**\n   * Wrap message by adding user preferences\n   *\n   * @private\n   * @param {FayeChannelMessage} message\n   * @returns {Message}\n   * @memberof ChatService\n   */\n  private wrapMessage(message: FayeChannelMessage): Message {\n    const userPref = this._userPreference[message.sender] ? this._userPreference[message.sender] :\n    { mute: this._defaultUserPreference.mute, color: this._defaultUserPreference.color };\n    const chatMsg: Message = {\n      content: message.content,\n      sender: message.sender,\n      color: userPref.color,\n      muted: userPref.mute\n    };\n    return chatMsg;\n  }\n\n  /**\n   * Mute a user in the chat\n   *\n   * @param {string} username\n   * @memberof ChatService\n   */\n  public muteUser(username: string) {\n    const userPref = this.getUserPef(username);\n    userPref.mute = true;\n    this.event.emit('mute', username);\n  }\n\n  /**\n   * Unmute user\n   *\n   * @param {string} username\n   * @memberof ChatService\n   */\n  public unmuteUser(username: string) {\n    this.getUserPef(username).mute = false;\n    this.event.emit('unmute', username);\n  }\n\n  /**\n   * change user background color in chat\n   *\n   * @param {string} username\n   * @param {string} color\n   * @memberof ChatService\n   */\n  public changeUserColor(username: string, color: string) {\n    this.getUserPef(username).color = color;\n    this.event.emit('color', username, color);\n  }\n\n  /**\n   * Get or set user preference\n   *\n   * @private\n   * @param {string} username\n   * @returns\n   * @memberof ChatService\n   */\n  private getUserPef(username: string) {\n    let userPref = this._userPreference[username];\n    if (!userPref) {\n      userPref = this._userPreference[username] = {\n        color: this._defaultUserPreference.color,\n        mute: this._defaultUserPreference.mute\n      };\n    }\n    return userPref;\n  }\n\n  /**\n   * Send message\n   *\n   * @private\n   * @memberof ChatService\n   */\n  public sendMessage(message: FayeChannelMessage) {\n    this._fayeManager.publish(this._chatChannel, JSON.stringify(message));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { EventManager } from '../../utils/eventManager';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventManagerFactory {\n  public create() {\n    return new EventManager();\n  }\n}\n","import { EventManager } from '../../utils/eventManager';\nimport { EventManagerFactory } from '../eventManager/event-manager-factory.service';\nimport { Logger } from '../logger/logger.service';\nimport { FayeState } from '../../enums/fayeState.enum';\nimport { Injectable } from '@angular/core';\n\ndeclare var Faye: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FayeManager {\n  /**\n   * Faye client status\n   * @type {FayeState}\n   * @memberof FayeService\n   */\n  private _state: FayeState = FayeState.DISCONNECTED;\n\n  /**\n   * _state getter property\n   *\n   * @readonly\n   * @memberof FayeService\n   */\n  public get states() {\n    return this._state;\n  }\n\n  /**\n   * Faye client\n   *\n   * @type {Client}\n   * @memberof FayeService\n   */\n  private _client;\n\n  /**\n   * Message cache size per channel\n   *\n   * @private\n   * @memberof FayeService\n   */\n  private _maxChannelCacheSize = 2000;\n\n  /**\n   * On connect event manager\n   *\n   * @type {EventManager}\n   * @memberof FayeService\n   */\n  private _onConnectEventManager: EventManager;\n\n  /**\n   * Keep track of the subscribers\n   *\n   * @private\n   * @type {{ [key: string]: EventManager[] }}\n   * @memberof FayeService\n   */\n  private _channelEventManager: { [key: string]: EventManager } = {};\n\n  /**\n   * Faye client event subscriptions\n   *\n   * @private\n   * @type {{ [key: string]: EventManager }}\n   * @memberof FayeService\n   */\n  private _fayeSubscriptions: { [key: string]: any } = {};\n\n  /**\n   * Cache per channel\n   *\n   * @private\n   * @type {{ [key: string]: any[] }}\n   * @memberof FayeService\n   */\n  private _cache: { [key: string]: any[] } = {};\n\n  /**\n   * On disconnect event manager\n   *\n   * @type {EventManager}\n   * @memberof FayeService\n   */\n  private _onDisconnectEventManager: EventManager;\n\n  constructor(\n    private _logger: Logger,\n    private _eventManagerFactory: EventManagerFactory\n  ) {\n\n    this._client = new Faye.Client('https://localhost/faye');\n    this._onConnectEventManager = this._eventManagerFactory.create();\n    this._onDisconnectEventManager = this._eventManagerFactory.create();\n\n    this._client.on('transport:up', () => {\n      this._logger.debug('Faye client connected');\n      this._state = FayeState.CONNECTED;\n      this._onConnectEventManager.raise(null);\n    });\n\n    this._client.on('transport:down', () => {\n      this._logger.debug('Faye client disconnected');\n      this._state = FayeState.DISCONNECTED;\n      this._onDisconnectEventManager.raise(null);\n    });\n  }\n\n  public onChannelMesage(channel: string, message: any, cache: any[]) {\n    this._channelEventManager[channel].raise(null, message);\n    // store the message in cache\n    cache.push(message);\n    while (cache.length > this._maxChannelCacheSize) {\n      cache.shift();\n    }\n  }\n\n  /**\n   * Susbcribe to channel's events\n   *\n   * @param {string} channel\n   * @param {(sender: any, eventArgs: any) => void} callback\n   * @param {boolean} fetchHistory\n   * @returns\n   * @memberof FayeService\n   */\n  public subscribe(channel: string, callback: (sender: any, eventArgs: any) => void, fetchHistory: boolean) {\n    let eventManager = this._channelEventManager[channel];\n    let cacheMessages = [];\n    let subscription;\n    let needToSubscribe = false;\n\n    if (!eventManager) {\n      eventManager = this._channelEventManager[channel] = this._eventManagerFactory.create();\n      needToSubscribe = true;\n    }\n\n    if (this._cache[channel] === undefined) {\n      this._cache[channel] = [];\n    }\n\n    subscription = eventManager.subscribe(null, callback);\n    this._logger.debug(`Faye client ${eventManager.subscriberCount} subscribers on channel ${channel}`);\n    cacheMessages = this._cache[channel];\n\n    if (fetchHistory && cacheMessages.length > 0) {\n      const copyCache = cacheMessages.slice();\n      copyCache.forEach(m => {\n        callback(null, m);\n      });\n    }\n\n    if (needToSubscribe) {\n      this._fayeSubscriptions[channel] = this._client.subscribe(channel, (message) => {\n        this.onChannelMesage(channel, message, cacheMessages);\n      });\n    }\n\n    return {\n      unsubscribe: (disconnect) => {\n        subscription.unsubscribe();\n        this._logger.debug(`Faye client ${eventManager.subscriberCount} subscribers on channel ${channel}`);\n        if (disconnect && !eventManager.hasSubscriber) {\n          this._fayeSubscriptions[channel].cancel();\n          delete this._fayeSubscriptions[channel];\n          delete this._channelEventManager[channel];\n        }\n      }\n    };\n  }\n\n  /**\n   * OnConnect event (trigger when we are connected to the faye client)\n   *\n   * @param {() => void} callback\n   * @returns\n   * @memberof FayeService\n   */\n  public onConnect(callback: () => void) {\n    const subscription = this._onConnectEventManager.subscribe(null, callback);\n    this._logger.debug(`Faye client ${this._onConnectEventManager.subscriberCount} subscribers on connect event`);\n    if (this._state === FayeState.CONNECTED) {\n      callback();\n    }\n    return {\n      unsubscribe: () => {\n        subscription.unsubscribe();\n        this._logger.debug(`Faye client ${this._onConnectEventManager.subscriberCount} subscribers on connect event`);\n      }\n    };\n  }\n\n  /**\n   * OnDisconnect event (trigger when we are disconnected from the faye client)\n   *\n   * @param {() => void} callback\n   * @returns\n   * @memberof FayeService\n   */\n  public onDisconnected(callback: () => void) {\n    const subscription = this._onDisconnectEventManager.subscribe(null, callback);\n    this._logger.debug(`Faye client ${this._onDisconnectEventManager.subscriberCount} subscribers on disconnect event`);\n    if (this._state === FayeState.DISCONNECTED) {\n      callback();\n    }\n\n    return {\n      unsubscribe: () => {\n        subscription.unsubscribe();\n        this._logger.debug(`Faye client ${this._onDisconnectEventManager.subscriberCount} subscribers on disconnect event`);\n      }\n    };\n  }\n\n  /**\n   * Publish a message to the faye client\n   *\n   * @param {string} channel\n   * @param {*} message\n   * @memberof FayeService\n   */\n  public publish(channel: string, message: any) {\n    this._client.publish(channel, message);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Just console.log() wrapper (more sexy than use console object ;) )\n * @export\n * @class LoggerService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class Logger {\n\n  constructor() { }\n  private print(msg: string): string {\n    return `${Date()} - [FayeChatWeb] => ${msg}`;\n  }\n\n  public error(msg: string)  {\n    console.error(this.print(msg));\n  }\n\n  public debug(msg: string)  {\n    console.log(this.print(msg));\n  }\n}\n","import { Subscription } from '../interfaces/subscription';\r\n\r\nexport class EventManager {\r\n    /**\r\n     * Returns true if EventManager has at least one subscriber\r\n     *\r\n     * @readonly\r\n     * @type {boolean}\r\n     * @memberof EventManger\r\n     */\r\n    get hasSubscriber(): boolean {\r\n        return this._subscriptions.length > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of subscribers\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberof EventManger\r\n     */\r\n    get subscriberCount(): number {\r\n        return this._subscriptions.length;\r\n    }\r\n\r\n    /**\r\n     * Subscriptions\r\n     *\r\n     * @private\r\n     * @type {Array<Subscription>}\r\n     * @memberof EventManger\r\n     */\r\n    private _subscriptions: Array<Subscription> = [];\r\n\r\n    /**\r\n     * Clean up event manager\r\n     *\r\n     * @private\r\n     * @memberof EventManger\r\n     */\r\n    private cleanup() {\r\n        this._subscriptions = [];\r\n    }\r\n\r\n    /**\r\n     * Subscribe to the event in order to be notified,\r\n     * but notified only once and then the event is automatically unsubscribed\r\n     * @param {Object | undefined} context\r\n     * @param {(sender: any, eventArg: any) => void} handler\r\n     * @returns\r\n     * @memberof EventManger\r\n     */\r\n    public subscribeOnce(context: Object | undefined, handler: (sender: any, eventArg: any) => void) {\r\n        return this._subscribe(true, context, handler);\r\n    }\r\n\r\n    /**\r\n     * Subscribe to the event in order to be notified\r\n     * @param {Object | undefined} context\r\n     * @param {(sender: any, eventArg: any) => void} handler\r\n     * @returns\r\n     * @memberof EventManger\r\n     */\r\n    public subscribe(context: Object | undefined, handler: (sender: any, eventArg: any) => void) {\r\n        return this._subscribe(false, context, handler);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {(Object | undefined)} context\r\n     * @param {(sender: any, eventArg: any) => void} handler\r\n     * @memberof EventManger\r\n     */\r\n    private _subscribe(isOnce: boolean, context: Object | undefined, handler: (sender: any, eventArg: any) => void) {\r\n        const localSubscription: Subscription = {\r\n            context: context,\r\n            handler: handler,\r\n            isOnce: isOnce\r\n        };\r\n        const self = this;\r\n        this._subscriptions.push(localSubscription);\r\n        return ({\r\n            unsubscribe: function() {\r\n                self._unsubscribe(localSubscription);\r\n                this.unsubscribe = function() { return undefined; };\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Unsubscribe\r\n     *\r\n     * @private\r\n     * @param {*} subscription\r\n     * @memberof EventManger\r\n     */\r\n    private _unsubscribe(subscription) {\r\n        if (this._subscriptions.includes(subscription)) {\r\n            this._subscriptions.splice(this._subscriptions.indexOf(subscription, 1));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Raise the event bu notifying all the subscribed handlers\r\n     *\r\n     * @param {Object} sender\r\n     * @param {*} eventArg\r\n     * @memberof EventManger\r\n     */\r\n    public raise(sender: Object, eventArg?: any) {\r\n        const unsubscribeList: Subscription[] = [];\r\n        this._subscriptions.forEach((sub: Subscription) => {\r\n            sub.handler.call(sub.context, sender, eventArg);\r\n            if (sub.isOnce) {\r\n                unsubscribeList.push(sub);\r\n            }\r\n        });\r\n        unsubscribeList.forEach(sub => { this._unsubscribe(sub); });\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}